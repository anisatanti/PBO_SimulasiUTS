/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import javax.swing.JOptionPane;
import java.sql.SQLException;

/**
 *
 * @author LENOVO
 */
public class FrameBuku extends javax.swing.JFrame {
    Connection conn;
    PreparedStatement pst;
    ResultSet rs;

    String driver = "org.postgresql.Driver";
    String koneksi = "jdbc:postgresql://localhost:5432/Buku";
    String user = "postgres";
    String password = "1234";
    InputStreamReader inputStreamReader = new InputStreamReader(System.in);
    BufferedReader input = new BufferedReader(inputStreamReader);
    /**
     * Creates new form FrameBuku
     */
    public FrameBuku() {
        initComponents();
        koneksi();
        tampil();
    }
    
    public void koneksi() {
    try {
        // Memuat driver PostgreSQL
        Class.forName(driver);
        
        // Membuat koneksi ke database
        conn = DriverManager.getConnection(koneksi, user, password);
        System.out.println("Koneksi berhasil!");
    } catch (Exception e) {
        e.printStackTrace();
        System.out.println("Koneksi gagal!");
    }
}
    public void tampil() {
    try {
        String sql = "SELECT * FROM Buku";
        pst = conn.prepareStatement(sql); 
        rs = pst.executeQuery();
        
        tblBuku.setModel(DbUtils.resultSetToTableModel(rs)); 
    } catch (Exception e) {
        e.printStackTrace();
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfISBN = new javax.swing.JTextField();
        tfJudul = new javax.swing.JTextField();
        tfThnTerbit = new javax.swing.JTextField();
        tfPenerbit = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBuku = new javax.swing.JTable();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Stencil", 0, 20)); // NOI18N
        jLabel1.setText("DATA BUKU");

        jLabel2.setText("ISBN");

        jLabel3.setText("Judul Buku");

        jLabel4.setText("Tahun Terbit");

        jLabel5.setText("Penerbit");

        tblBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ISBN", "Judul Buku", "Tahun Terbit", "Penerbit"
            }
        ));
        tblBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBukuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBuku);

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addComponent(tfPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfJudul, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(66, 66, 66)
                            .addComponent(tfThnTerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnInsert)
                                .addGap(34, 34, 34)
                                .addComponent(btnUpdate)
                                .addGap(33, 33, 33)
                                .addComponent(btnDelete)
                                .addGap(34, 34, 34)
                                .addComponent(btnClear))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnExit)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfThnTerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
    try {
    // Variabel untuk menyimpan pesan error jika ada kolom yang kosong
    StringBuilder errorMessage = new StringBuilder();

    // Validasi setiap kolom input
    if (tfISBN.getText().isEmpty()) {
        errorMessage.append("ISBN diisi dulu yaa!\n");
    }
    if (tfJudul.getText().isEmpty()) {
        errorMessage.append("Judul Buku tidak boleh kosong!\n");
    }
    if (tfThnTerbit.getText().isEmpty()) {
        errorMessage.append("Tahun Terbit diisi dulu!\n");
    }
    if (tfPenerbit.getText().isEmpty()) {
        errorMessage.append("Penerbit diisi dulu!\n");
    }

    // Jika ada pesan error, tampilkan pop-up dan hentikan proses
    if (errorMessage.length() > 0) {
        JOptionPane.showMessageDialog(null, errorMessage.toString(), "Input Error", JOptionPane.WARNING_MESSAGE);
        return; // Hentikan proses jika ada error
    }

    // Konversi tahun terbit menjadi tipe integer
    int tahunTerbit;
    try {
        tahunTerbit = Integer.parseInt(tfThnTerbit.getText());
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Tahun Terbit harus berupa angka!", "Input Error", JOptionPane.WARNING_MESSAGE);
        return; // Hentikan proses jika input tidak valid
    }

    // Jika semua input sudah terisi dan valid, lanjutkan proses insert ke database
    String sql = "INSERT INTO Buku (ISBN, Judul_Buku, Tahun_Terbit, Penerbit) VALUES (?, ?, ?, ?)";
    pst = conn.prepareStatement(sql);

    pst.setString(1, tfISBN.getText());
    pst.setString(2, tfJudul.getText());
    pst.setInt(3, tahunTerbit); // Set tahun terbit sebagai integer
    pst.setString(4, tfPenerbit.getText());

    // Eksekusi query
    int rowsInserted = pst.executeUpdate();

    // Cek apakah data berhasil ditambahkan
    if (rowsInserted > 0) {
        // Refresh data di tabel terlebih dahulu
        tampil();
        
        // Setelah tabel diperbarui, tampilkan pop-up pesan sukses
        JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan", "Sukses", JOptionPane.INFORMATION_MESSAGE);
    }

} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
}

    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
    if (conn == null) {
    JOptionPane.showMessageDialog(null, "Koneksi ke database tidak tersedia.");
    return;
}
try {
    StringBuilder errorMessage = new StringBuilder();

    // Validasi setiap kolom input
    if (tfISBN.getText().isEmpty()) {
        errorMessage.append("ISBN diisi dulu yaa!\n");
    }
    if (tfJudul.getText().isEmpty()) {
        errorMessage.append("Judul Buku tidak boleh kosong!\n");
    }
    if (tfThnTerbit.getText().isEmpty()) {
        errorMessage.append("Tahun Terbit diisi dulu!\n");
    }
    if (tfPenerbit.getText().isEmpty()) {
        errorMessage.append("Penerbit diisi dulu!\n");
    }

    // Jika ada pesan error, tampilkan pop-up dan hentikan proses
    if (errorMessage.length() > 0) {
        JOptionPane.showMessageDialog(null, errorMessage.toString(), "Input Error", JOptionPane.WARNING_MESSAGE);
        return; // Hentikan proses jika ada error
    }

    // SQL query untuk update data
    String sql = "UPDATE Buku SET Judul_Buku=?, Tahun_Terbit=?, Penerbit=? WHERE ISBN=?";
    pst = conn.prepareStatement(sql);

    // Set parameter dari komponen GUI
    pst.setString(1, tfJudul.getText());
    pst.setInt(2, Integer.parseInt(tfThnTerbit.getText())); // Konversi input tahun terbit ke integer
    pst.setString(3, tfPenerbit.getText());
    pst.setString(4, tfISBN.getText());

    // Eksekusi update
    int updated = pst.executeUpdate();
    // Tampilkan pesan jika update berhasil
    if (updated > 0) {
        // Refresh data di tabel terlebih dahulu
        tampil();
        // Setelah tabel diperbarui, tampilkan pop-up pesan sukses
        JOptionPane.showMessageDialog(null, "Data berhasil di-update", "Sukses", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(null, "Data gagal di-update. Periksa ISBN");
    }

} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
    String id = tfISBN.getText();

    if (id.isEmpty()) {
    // Validasi jika ID Paspor kosong
     JOptionPane.showMessageDialog(null, "ISBN diisi dulu yaa!", "Input Error", JOptionPane.WARNING_MESSAGE);
        return;
    }
    int confirm = JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus data dengan ISBN: " + id + "?",
            "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        try {
            // SQL query untuk menghapus data
            String query = "DELETE FROM Buku WHERE ISBN = ?";
             pst = conn.prepareStatement(query);
            pst.setString(1, id);

            // Eksekusi penghapusan
            int deleted = pst.executeUpdate();
            // Refresh tabel dan tampilkan pesan
            tampil();
            String message = (deleted > 0) ? "Data berhasil dihapus!" : "ISBN tidak ditemukan!";
            JOptionPane.showMessageDialog(null, message);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", 
                    JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBukuMouseClicked
        // TODO add your handling code here:
     int row = tblBuku.getSelectedRow();

    // Mengambil data dari tabel sesuai dengan indeks kolom
    String id = tblBuku.getValueAt(row, 0).toString(); 
    String Judul = tblBuku.getValueAt(row, 1).toString(); 
    String Tahun = tblBuku.getValueAt(row, 2).toString(); 
    String Penerbit = tblBuku.getValueAt(row, 3).toString(); 

    // Mengisi form dengan data yang diperoleh
    tfISBN.setText(id);
    tfJudul.setText(Judul);
    tfThnTerbit.setText(Tahun);
    tfPenerbit.setText(Penerbit);

 
    }//GEN-LAST:event_tblBukuMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
   bersih(); }
   public void bersih() {
    tfISBN.setText("");
    tfJudul.setText("");
    tfThnTerbit.setText(""); 
    tfPenerbit.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameBuku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBuku;
    private javax.swing.JTextField tfISBN;
    private javax.swing.JTextField tfJudul;
    private javax.swing.JTextField tfPenerbit;
    private javax.swing.JTextField tfThnTerbit;
    // End of variables declaration//GEN-END:variables
}
